plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.netflix.dgs.codegen' version '6.0.3'
	id("org.liquibase.gradle") version "2.2.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:8.6.0'))
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'

	implementation 'net.datafaker:datafaker:1.7.0'
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	implementation 'org.liquibase:liquibase-core:4.27.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava {
	packageName = 'com.example.graphqlscaffold.generated'
	generateClient = true
	typeMapping = [
			"Date"              : "java.time.LocalDate",
			"NonNegativeInt"    : "java.lang.Integer",
			"Url"               : "java.net.URL",
			"DateTime"          : "java.time.OffsetDateTime"
	]
}

